plugins {
    id "org.jetbrains.kotlin.jvm" version "1.2.40" apply false
    id "com.palantir.git-version" version "0.10.0"
    id "com.jfrog.bintray" version "1.8.0"
    id "org.jetbrains.dokka" version "0.9.17" apply false
}

allprojects {
    apply plugin: 'idea'
}

subprojects { subproj ->
    apply plugin: 'java'
    apply plugin: 'kotlin'
    apply plugin: 'kotlin-kapt'
    apply plugin: 'org.jetbrains.dokka'

    group 'org.snakeskin'
    version gitVersion()

    repositories {
        mavenCentral()

        //WPI Maven
        maven {
            url "http://first.wpi.edu/FRC/roborio/maven/release/"
        }
        //Jaci Third Party
        maven {
            url "https://raw.githubusercontent.com/Open-RIO/Maven-Mirror/master/m2"
        }
    }

    configurations {
        required //Represents a dependency that must be provided by the applications using the library
        compile.extendsFrom required
    }

    dependencies {
        required "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.2.40"
        testCompile group: 'junit', name: 'junit', version: '4.12'
    }

    jar {
        dependsOn configurations.runtime
        destinationDir = file("$rootDir/out/libs")
        from {
            (configurations.runtime - configurations.required).collect {
                it.isDirectory() ? it : zipTree(it)
            }
        }
    }

    sourceCompatibility = 1.8

    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }

    // output to docs directory:  Javadoc format
    dokka {
        def dirname = subproj.projectDir.absoluteFile.name
        def moduleName = subproj.name
        def dokkaOutputBase = "${rootDir}/docs"
        def dokkaLinkDir = "${projectDir}/src/main/kotlin"
        def dokkaLinkUrl = "https://github.com/team401/snakeskin/${dirname}/src/main/kotlin"
        def dokkaLinkSuffix = "#L"

        reportUndocumented = false
        outputFormat = "javadoc"
        outputDirectory = "${dokkaOutputBase}/${moduleName}"
        linkMapping {
            dir = dokkaLinkDir
            url = dokkaLinkUrl
            suffix = dokkaLinkSuffix
        }
    }
}

task cleanDocs(type: Delete) {
    group = 'documentation'
    delete "${rootDir}/docs"
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.7'
}