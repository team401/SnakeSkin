plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.20" apply false
    id "com.palantir.git-version" version "0.10.0"
    id "com.jfrog.bintray" version "1.8.4" apply false
    id "org.jetbrains.dokka" version "0.9.17" apply false
}

allprojects {
    apply plugin: 'idea'
}

task regenDocs(type: Delete) {
    group = 'documentation'
    delete "${rootDir}/docs"
}

subprojects { subproj ->
    apply plugin: 'java-library'
    apply plugin: 'kotlin'
    apply plugin: 'org.jetbrains.dokka'

    apply plugin: 'com.jfrog.bintray'
    apply plugin: 'maven'
    apply plugin: 'maven-publish'

    group 'org.snakeskin'
    version gitVersion()

    repositories {
        mavenCentral()

        //WPI Maven
        maven {
            url "http://first.wpi.edu/FRC/roborio/maven/release/"
        }
        //CTRE Maven
        maven  {
            url "http://devsite.ctr-electronics.com/maven/release/"
        }
        //SnakeSkin bintray
        maven {
            url "http://dl.bintray.com/team401/SnakeSkin"
        }
    }

    //Jars built for github releases
    jar {
        destinationDir = file("$rootDir/out/libs")
    }

    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    }

    sourceCompatibility = 1.8

    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }

    // output to docs directory:  Javadoc format
    dokka {
        def dirname = subproj.projectDir.absoluteFile.name
        def moduleName = subproj.name
        def dokkaOutputBase = "${rootDir}/docs"
        def dokkaLinkDir = "${projectDir}/src/main/kotlin"
        def dokkaLinkUrl = "https://github.com/team401/snakeskin/${dirname}/src/main/kotlin"
        def dokkaLinkSuffix = "#L"

        reportUndocumented = false
        outputFormat = "javadoc"
        outputDirectory = "${dokkaOutputBase}/${moduleName}"
        linkMapping {
            dir = dokkaLinkDir
            url = dokkaLinkUrl
            suffix = dokkaLinkSuffix
        }
    }

    regenDocs.finalizedBy dokka

    task sourcesJar(type: Jar) {
        from sourceSets.main.allSource
        classifier = 'sources'
    }
}

wrapper {
    gradleVersion = '5.1.1'
}